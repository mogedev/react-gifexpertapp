{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAe7C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GAAD,OAAOF,EAAeE,EAAEQ,OAAOF,a,+BCHhDG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjC,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAXnB,kBAeZM,GAfY,4CAAH,sDCFPM,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAErC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAZAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAAEnB,IAEEoB,EDjB0BK,CAAczB,GAAlCY,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAGrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDf,EAArD,OAEEmB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOH,KAAK,SAAAiB,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIhB,aEfzBiB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnBlC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31a2c8a1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => setInputValue( e.target.value ); \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if ( inputValue.trim().length > 2 ) {\n            setCategories( categories => [ inputValue, ...categories ] );\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=fF6rkiiWKO6d03PREk5lkuqEPUo94Td0`;\n    const resp = await fetch ( url );\n    const { data } = await resp.json();\n\n\n    const gifs = data.map( ({ id, title, images }) => {\n        return {\n            id: id,\n            title: title,\n            url: images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFecthGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFecthGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFecthGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            })\n    }, [ category ]);\n\n    return state; // { data: [], loading: true };\n\n\n}\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // HunterXHunter\n    //     setCategories( cats => [ ...cats, 'HunterXHunter' ] );\n    // };\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n\n            <ol>\n                {\n                    categories.map( category => ( \n                        <GifGrid \n                            key={ category }\n                            category={ category } \n                        />\n                    ) )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}